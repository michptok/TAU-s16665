{
	"info": {
		"_postman_id": "261641c0-a07f-4279-a76c-0bbf923adab8",
		"name": "CoinPaprika",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "List coins",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// It may fail depending on your connection or CoinPaprika API service performance\r",
							"pm.test(\"Response time is less than 500ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
							"});\r",
							"\r",
							"pm.test(\"Response is an array\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.be.a('array');\r",
							"});\r",
							"\r",
							"pm.test(\"Response has an id property that is a string in first element of the array \", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[1].id).to.be.a('string');\r",
							"});\r",
							"\r",
							"// It will fail on purpose\r",
							"pm.test(\"Response has a 'non_existent_property' that is string\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.non_existent_property).to.be.a('string');\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/coins",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"coins"
					]
				}
			},
			"response": []
		},
		{
			"name": "Coin",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response has a JSON body\", function () {\r",
							"    pm.response.to.be.json;\r",
							"});\r",
							"\r",
							"pm.test(\"Response has an id that is string\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.id).to.be.a('string');\r",
							"});\r",
							"\r",
							"pm.test(\"Response has a proper id value\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.id).to.eql(\"btc-bitcoin\");\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/coins/btc-bitcoin",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"coins",
						"btc-bitcoin"
					]
				}
			},
			"response": []
		},
		{
			"name": "404",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Check for no 200 code\", function () {\r",
							"    pm.response.to.not.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Check for 404 code\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Body contains a proper message\", function () {\r",
							"    pm.response.to.have.body(\"404 page not found\\n\");\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/non_existent",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"non_existent"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "base_url",
			"value": "https://api.coinpaprika.com/v1/"
		}
	]
}